[{"title":"Getting Started","type":0,"sectionRef":"#","url":"/CryptUtil/docs/intro","content":"","keywords":""},{"title":"Usage Example​","type":1,"pageTitle":"Getting Started","url":"/CryptUtil/docs/intro#usage-example","content":"The imported asset is now available for use. -- Reference folder with utilities: local Utilities = require(game:GetService(&quot;ReplicatedStorage&quot;)).CryptUtil -- Require the utility modules: local Queue = require(Utilities.Queue) -- Use the modules: local testQueue = Queue.new() testQueue:setFunc(function(...) print(&quot;Received:&quot;, ...) end) testQueue:run(&quot;Hi!&quot;) testQueue:run(2 + 12) testQueue:run(false)  "},{"title":"String","type":0,"sectionRef":"#","url":"/CryptUtil/docs/utilities/string","content":"","keywords":""},{"title":"Example Usage​","type":1,"pageTitle":"String","url":"/CryptUtil/docs/utilities/string#example-usage","content":"local myStr = &quot;Hello, world!&quot; local args = String.split(myStr) -- returns an array of each word in the string. for _, str in pairs(args) do print(str) --[[ Hello, world! ]] end   "},{"title":"Class Functions​","type":1,"pageTitle":"String","url":"/CryptUtil/docs/utilities/string#class-functions","content":""},{"title":"String.split()​","type":1,"pageTitle":"String","url":"/CryptUtil/docs/utilities/string#stringsplit","content":"String.split(&lt;string&gt;, [seperator])  Returns an array of words in the specified string. "},{"title":"Table","type":0,"sectionRef":"#","url":"/CryptUtil/docs/utilities/table","content":"","keywords":""},{"title":"Example Usage​","type":1,"pageTitle":"Table","url":"/CryptUtil/docs/utilities/table#example-usage","content":"local myItems = { &quot;Cheese&quot;, &quot;Milk&quot;, &quot;Oatmeal&quot; } Table.shift(myItems) Table.print(myItems) --[[ [1] = &quot;Milk&quot;, [2] = &quot;Oatmeal&quot;, ]]   "},{"title":"Class Functions​","type":1,"pageTitle":"Table","url":"/CryptUtil/docs/utilities/table#class-functions","content":""},{"title":"Table.shift()​","type":1,"pageTitle":"Table","url":"/CryptUtil/docs/utilities/table#tableshift","content":"Table.shift({ &quot;Item1&quot;, &quot;Item2&quot;, &quot;Item3&quot; })  Removes the first index of the table, and returns it. "},{"title":"Table.cloneInto()​","type":1,"pageTitle":"Table","url":"/CryptUtil/docs/utilities/table#tablecloneinto","content":"Table.cloneInto(tblCloningDataFrom, tblToCloneInto)  Clones every item (including nested items) from the first table into the second table. "},{"title":"Table.getKeyFromValue()​","type":1,"pageTitle":"Table","url":"/CryptUtil/docs/utilities/table#tablegetkeyfromvalue","content":"Table.getKeyFromValue(&quot;Lucky1&quot;)  Returns the index of the specified value. "},{"title":"Table.print()​","type":1,"pageTitle":"Table","url":"/CryptUtil/docs/utilities/table#tableprint","content":"There are two ways you can output the table: in brackets, or with colons. Table.print({ hi = &quot;hello&quot;, bye = &quot;cya&quot; })  This will output the table with colons. Table.print({ hi = &quot;hello&quot;, bye = &quot;cya&quot; }, &quot;Bracket&quot;)  This will output the table in brackets.  This function accepts three parameters: &lt;table&gt; -&gt; a table object; [printType] -&gt; a print type; [data] -&gt; a data table object; [name] -&gt; holds the name of the table  "},{"title":"Queue","type":0,"sectionRef":"#","url":"/CryptUtil/docs/utilities/queue","content":"","keywords":""},{"title":"Example Usage​","type":1,"pageTitle":"Queue","url":"/CryptUtil/docs/utilities/queue#example-usage","content":"local queue = Queue.new() queue:setFunc(function(...) print(&quot;Received:&quot;, ...) end) queue:run(&quot;Hi!&quot;) queue:run(2 + 12) queue:run(false)   "},{"title":"Class Functions​","type":1,"pageTitle":"Queue","url":"/CryptUtil/docs/utilities/queue#class-functions","content":""},{"title":"Queue.new()​","type":1,"pageTitle":"Queue","url":"/CryptUtil/docs/utilities/queue#queuenew","content":"Queue.new() --&gt; NewQueue  Constructs a new queue. "},{"title":"Queue.delete()​","type":1,"pageTitle":"Queue","url":"/CryptUtil/docs/utilities/queue#queuedelete","content":"Queue.delete(&quot;queueName&quot;) --&gt; nil  Deletes the queue.  "},{"title":"Queue Functions​","type":1,"pageTitle":"Queue","url":"/CryptUtil/docs/utilities/queue#queue-functions","content":""},{"title":"NewQueue:setFunc()​","type":1,"pageTitle":"Queue","url":"/CryptUtil/docs/utilities/queue#newqueuesetfunc","content":"Queue:setFunc(function(...) -- code here end)  Sets the function which will be ran on each item in the queue once at a time. "},{"title":"NewQueue:run()​","type":1,"pageTitle":"Queue","url":"/CryptUtil/docs/utilities/queue#newqueuerun","content":"Queue:run(...) --&gt; any? : any  Adds a new item to the queue, which is set to run with the specified arguments. "}]